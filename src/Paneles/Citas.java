/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Paneles;

import java.awt.Color;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marco
 */
public class Citas extends javax.swing.JPanel {

    /**
     * Creates new form Citas
     */
    public Citas() {
        initComponents();
        try {
            Conexion con = new Conexion();
            Statement stmt = con.createStatement();

            // Cargar datos en tableCita
            ResultSet rs = stmt.executeQuery("SELECT Citas.id_cita, Citas.id_paciente, Pacientes.nombres, Pacientes.apellidos, Citas.id_doctor, Doctores.nombres_doctor, Doctores.apellidos_doctor, Citas.fecha, Citas.hora FROM Citas JOIN Pacientes ON Citas.id_paciente = Pacientes.id_paciente JOIN Doctores ON Citas.id_doctor = Doctores.id_doctor");
            DefaultTableModel modelCita = new DefaultTableModel(new Object[]{"ID_Cita", "ID_Paciente", "Nombres_Paciente", "Apellidos_Paciente", "ID_Doctor", "Nombres_Doctor", "Apellidos_Doctor", "Fecha", "Hora"}, 0);
            while (rs.next()) {
                modelCita.addRow(new Object[]{rs.getInt("id_cita"), rs.getInt("id_paciente"), rs.getString("nombres"), rs.getString("apellidos"), rs.getInt("id_doctor"), rs.getString("nombres_doctor"), rs.getString("apellidos_doctor"), rs.getDate("fecha"), rs.getTime("hora")});
            }
            tableCita.setModel(modelCita);

            // Cargar datos en tableRecetas
            rs = stmt.executeQuery("SELECT Recetas.id_receta, Recetas.id_cita, Citas.id_paciente, Pacientes.nombres, Pacientes.apellidos, Recetas.id_doctor, Doctores.nombres_doctor, Doctores.apellidos_doctor, Recetas.fecha, Recetas.hora FROM Recetas JOIN Citas ON Recetas.id_cita = Citas.id_cita JOIN Pacientes ON Citas.id_paciente = Pacientes.id_paciente JOIN Doctores ON Recetas.id_doctor = Doctores.id_doctor");
            DefaultTableModel modelRecetas = new DefaultTableModel(new Object[]{"ID_Receta", "ID_Cita", "ID_Paciente", "Nombres_Paciente", "Apellidos_Paciente", "ID_Doctor", "Nombres_Doctor", "Apellidos_Doctor", "Fecha", "Hora"}, 0);
            while (rs.next()) {
                modelRecetas.addRow(new Object[]{rs.getInt("id_receta"), rs.getInt("id_cita"), rs.getInt("id_paciente"), rs.getString("nombres"), rs.getString("apellidos"), rs.getInt("id_doctor"), rs.getString("nombres_doctor"), rs.getString("apellidos_doctor"), rs.getDate("fecha"), rs.getTime("hora")});
            }
            tableRecetas.setModel(modelRecetas);
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        tituloCrearCita = new javax.swing.JLabel();
        txtId_Pacientes = new javax.swing.JLabel();
        txtId_Doctor = new javax.swing.JLabel();
        txtFecha = new javax.swing.JLabel();
        txtHora = new javax.swing.JLabel();
        boxIDPaciente = new javax.swing.JTextField();
        comboBoxIdDoctor = new javax.swing.JComboBox<>();
        dateChooser = new com.toedter.calendar.JDateChooser();
        comboBoxHora = new javax.swing.JComboBox<>();
        comboBoxMin = new javax.swing.JComboBox<>();
        fondoCrear = new javax.swing.JPanel();
        btnCrear = new javax.swing.JLabel();
        tituloCrearCita1 = new javax.swing.JLabel();
        txtIDCita = new javax.swing.JLabel();
        boxIdCita = new javax.swing.JTextField();
        txtIdPacientesModi = new javax.swing.JLabel();
        comboBoxIdDoctorRe = new javax.swing.JComboBox<>();
        fondoBuscar = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JLabel();
        fondoMofificarReceta = new javax.swing.JPanel();
        btnModificarReceta = new javax.swing.JLabel();
        fondoBorraReceta = new javax.swing.JPanel();
        btnBorrarReceta = new javax.swing.JLabel();
        fondoCrearReceta = new javax.swing.JPanel();
        btnCrearReceta = new javax.swing.JLabel();
        fondoLimpiarReceta = new javax.swing.JPanel();
        btnLimpiarReceta = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRecetas = new javax.swing.JTable();
        fondoLimpiarCita = new javax.swing.JPanel();
        btnLimpiarCita = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JLabel();
        boxDescripcion = new javax.swing.JTextField();
        fondoBuscarReceta = new javax.swing.JPanel();
        btnBuscarReceta = new javax.swing.JLabel();
        fondoBorraCita = new javax.swing.JPanel();
        btnBorrarCita = new javax.swing.JLabel();
        fondoMofificarCita = new javax.swing.JPanel();
        btnModificarCita = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableCita = new javax.swing.JTable();

        bg.setBackground(new java.awt.Color(255, 255, 255));

        tituloCrearCita.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        tituloCrearCita.setForeground(new java.awt.Color(38, 41, 43));
        tituloCrearCita.setText("CREAR CITA");

        txtId_Pacientes.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        txtId_Pacientes.setForeground(new java.awt.Color(38, 41, 43));
        txtId_Pacientes.setText("ID_Paciente:");

        txtId_Doctor.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        txtId_Doctor.setForeground(new java.awt.Color(38, 41, 43));
        txtId_Doctor.setText("ID_Doctor:");

        txtFecha.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(38, 41, 43));
        txtFecha.setText("Fecha:");

        txtHora.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        txtHora.setForeground(new java.awt.Color(38, 41, 43));
        txtHora.setText("Hora:");

        comboBoxIdDoctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));

        comboBoxHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));

        comboBoxMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "15", "30", "45" }));

        fondoCrear.setBackground(new java.awt.Color(95, 122, 219));

        btnCrear.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnCrear.setForeground(new java.awt.Color(255, 255, 255));
        btnCrear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnCrear.setText("CREAR");
        btnCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCrearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCrearMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fondoCrearLayout = new javax.swing.GroupLayout(fondoCrear);
        fondoCrear.setLayout(fondoCrearLayout);
        fondoCrearLayout.setHorizontalGroup(
            fondoCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
        );
        fondoCrearLayout.setVerticalGroup(
            fondoCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCrear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tituloCrearCita1.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        tituloCrearCita1.setForeground(new java.awt.Color(38, 41, 43));
        tituloCrearCita1.setText("CREAR RECETA");

        txtIDCita.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        txtIDCita.setForeground(new java.awt.Color(38, 41, 43));
        txtIDCita.setText("ID_Cita:");

        txtIdPacientesModi.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        txtIdPacientesModi.setForeground(new java.awt.Color(38, 41, 43));
        txtIdPacientesModi.setText("ID_Doctor:");

        comboBoxIdDoctorRe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));

        fondoBuscar.setBackground(new java.awt.Color(95, 122, 219));

        btnBuscar.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBuscar.setText("BUSCAR");
        btnBuscar.setToolTipText("");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fondoBuscarLayout = new javax.swing.GroupLayout(fondoBuscar);
        fondoBuscar.setLayout(fondoBuscarLayout);
        fondoBuscarLayout.setHorizontalGroup(
            fondoBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
        );
        fondoBuscarLayout.setVerticalGroup(
            fondoBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        fondoMofificarReceta.setBackground(new java.awt.Color(95, 122, 219));

        btnModificarReceta.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnModificarReceta.setForeground(new java.awt.Color(255, 255, 255));
        btnModificarReceta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnModificarReceta.setText("MODIFICAR");
        btnModificarReceta.setToolTipText("");
        btnModificarReceta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificarReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnModificarRecetaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnModificarRecetaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fondoMofificarRecetaLayout = new javax.swing.GroupLayout(fondoMofificarReceta);
        fondoMofificarReceta.setLayout(fondoMofificarRecetaLayout);
        fondoMofificarRecetaLayout.setHorizontalGroup(
            fondoMofificarRecetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoMofificarRecetaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnModificarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        fondoMofificarRecetaLayout.setVerticalGroup(
            fondoMofificarRecetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnModificarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        fondoBorraReceta.setBackground(new java.awt.Color(95, 122, 219));

        btnBorrarReceta.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnBorrarReceta.setForeground(new java.awt.Color(255, 255, 255));
        btnBorrarReceta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBorrarReceta.setText("BORRAR");
        btnBorrarReceta.setToolTipText("");
        btnBorrarReceta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrarReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBorrarRecetaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBorrarRecetaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fondoBorraRecetaLayout = new javax.swing.GroupLayout(fondoBorraReceta);
        fondoBorraReceta.setLayout(fondoBorraRecetaLayout);
        fondoBorraRecetaLayout.setHorizontalGroup(
            fondoBorraRecetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoBorraRecetaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnBorrarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        fondoBorraRecetaLayout.setVerticalGroup(
            fondoBorraRecetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBorrarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        fondoCrearReceta.setBackground(new java.awt.Color(95, 122, 219));

        btnCrearReceta.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnCrearReceta.setForeground(new java.awt.Color(255, 255, 255));
        btnCrearReceta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnCrearReceta.setText("CREAR");
        btnCrearReceta.setToolTipText("");
        btnCrearReceta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrearReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearRecetaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCrearRecetaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCrearRecetaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fondoCrearRecetaLayout = new javax.swing.GroupLayout(fondoCrearReceta);
        fondoCrearReceta.setLayout(fondoCrearRecetaLayout);
        fondoCrearRecetaLayout.setHorizontalGroup(
            fondoCrearRecetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoCrearRecetaLayout.createSequentialGroup()
                .addComponent(btnCrearReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        fondoCrearRecetaLayout.setVerticalGroup(
            fondoCrearRecetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCrearReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        fondoLimpiarReceta.setBackground(new java.awt.Color(95, 122, 219));

        btnLimpiarReceta.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnLimpiarReceta.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiarReceta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnLimpiarReceta.setText("LIMPIAR");
        btnLimpiarReceta.setToolTipText("");
        btnLimpiarReceta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiarReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarRecetaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLimpiarRecetaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLimpiarRecetaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fondoLimpiarRecetaLayout = new javax.swing.GroupLayout(fondoLimpiarReceta);
        fondoLimpiarReceta.setLayout(fondoLimpiarRecetaLayout);
        fondoLimpiarRecetaLayout.setHorizontalGroup(
            fondoLimpiarRecetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLimpiarRecetaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLimpiarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fondoLimpiarRecetaLayout.setVerticalGroup(
            fondoLimpiarRecetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnLimpiarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        tableRecetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_Receta", "ID_Cita", "ID_Paciente", "Nombres_Paciente", "Apellidos_Paciente", "ID_Doctor", "Nombres_Doctor", "Apellidos_Doctor", "Fecha", "Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRecetas.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tableRecetas);
        if (tableRecetas.getColumnModel().getColumnCount() > 0) {
            tableRecetas.getColumnModel().getColumn(0).setResizable(false);
            tableRecetas.getColumnModel().getColumn(1).setResizable(false);
            tableRecetas.getColumnModel().getColumn(2).setResizable(false);
            tableRecetas.getColumnModel().getColumn(3).setResizable(false);
            tableRecetas.getColumnModel().getColumn(4).setResizable(false);
            tableRecetas.getColumnModel().getColumn(5).setResizable(false);
            tableRecetas.getColumnModel().getColumn(6).setResizable(false);
            tableRecetas.getColumnModel().getColumn(7).setResizable(false);
            tableRecetas.getColumnModel().getColumn(8).setResizable(false);
            tableRecetas.getColumnModel().getColumn(9).setResizable(false);
        }

        fondoLimpiarCita.setBackground(new java.awt.Color(95, 122, 219));

        btnLimpiarCita.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnLimpiarCita.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiarCita.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnLimpiarCita.setText("LIMPIAR");
        btnLimpiarCita.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiarCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarCitaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLimpiarCitaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLimpiarCitaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fondoLimpiarCitaLayout = new javax.swing.GroupLayout(fondoLimpiarCita);
        fondoLimpiarCita.setLayout(fondoLimpiarCitaLayout);
        fondoLimpiarCitaLayout.setHorizontalGroup(
            fondoLimpiarCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLimpiarCitaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLimpiarCita, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fondoLimpiarCitaLayout.setVerticalGroup(
            fondoLimpiarCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoLimpiarCitaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnLimpiarCita, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        txtDescripcion.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        txtDescripcion.setForeground(new java.awt.Color(38, 41, 43));
        txtDescripcion.setText("Descripción: ");

        boxDescripcion.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        fondoBuscarReceta.setBackground(new java.awt.Color(95, 122, 219));

        btnBuscarReceta.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnBuscarReceta.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarReceta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBuscarReceta.setText("BUSCAR");
        btnBuscarReceta.setToolTipText("");
        btnBuscarReceta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarRecetaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarRecetaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarRecetaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fondoBuscarRecetaLayout = new javax.swing.GroupLayout(fondoBuscarReceta);
        fondoBuscarReceta.setLayout(fondoBuscarRecetaLayout);
        fondoBuscarRecetaLayout.setHorizontalGroup(
            fondoBuscarRecetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoBuscarRecetaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fondoBuscarRecetaLayout.setVerticalGroup(
            fondoBuscarRecetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoBuscarRecetaLayout.createSequentialGroup()
                .addComponent(btnBuscarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        fondoBorraCita.setBackground(new java.awt.Color(95, 122, 219));

        btnBorrarCita.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnBorrarCita.setForeground(new java.awt.Color(255, 255, 255));
        btnBorrarCita.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBorrarCita.setText("BORRAR");
        btnBorrarCita.setToolTipText("");
        btnBorrarCita.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrarCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBorrarCitaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBorrarCitaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBorrarCitaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fondoBorraCitaLayout = new javax.swing.GroupLayout(fondoBorraCita);
        fondoBorraCita.setLayout(fondoBorraCitaLayout);
        fondoBorraCitaLayout.setHorizontalGroup(
            fondoBorraCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoBorraCitaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnBorrarCita, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        fondoBorraCitaLayout.setVerticalGroup(
            fondoBorraCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBorrarCita, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        fondoMofificarCita.setBackground(new java.awt.Color(95, 122, 219));

        btnModificarCita.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnModificarCita.setForeground(new java.awt.Color(255, 255, 255));
        btnModificarCita.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnModificarCita.setText("MODIFICAR");
        btnModificarCita.setToolTipText("");
        btnModificarCita.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificarCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarCitaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnModificarCitaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnModificarCitaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout fondoMofificarCitaLayout = new javax.swing.GroupLayout(fondoMofificarCita);
        fondoMofificarCita.setLayout(fondoMofificarCitaLayout);
        fondoMofificarCitaLayout.setHorizontalGroup(
            fondoMofificarCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoMofificarCitaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnModificarCita, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        fondoMofificarCitaLayout.setVerticalGroup(
            fondoMofificarCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnModificarCita, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        tableCita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_Cita", "ID_Paciente", "Nombres_Paciente", "Apellidos_Paciente", "ID_Doctor", "Nombres_Doctor", "Apellidos_Doctor", "Fecha", "Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCita.getTableHeader().setReorderingAllowed(false);
        tableCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCitaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableCita);
        if (tableCita.getColumnModel().getColumnCount() > 0) {
            tableCita.getColumnModel().getColumn(0).setResizable(false);
            tableCita.getColumnModel().getColumn(1).setResizable(false);
            tableCita.getColumnModel().getColumn(2).setResizable(false);
            tableCita.getColumnModel().getColumn(3).setResizable(false);
            tableCita.getColumnModel().getColumn(4).setResizable(false);
            tableCita.getColumnModel().getColumn(5).setResizable(false);
            tableCita.getColumnModel().getColumn(6).setResizable(false);
            tableCita.getColumnModel().getColumn(7).setResizable(false);
            tableCita.getColumnModel().getColumn(8).setResizable(false);
        }

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(tituloCrearCita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(87, 87, 87))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addGap(98, 98, 98)
                                        .addComponent(comboBoxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(comboBoxMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtId_Pacientes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtId_Doctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(boxIDPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboBoxIdDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(76, 92, Short.MAX_VALUE))))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(fondoMofificarCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(fondoBorraCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(bgLayout.createSequentialGroup()
                                            .addComponent(fondoCrearReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(35, 35, 35)
                                            .addComponent(fondoLimpiarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(36, 36, 36)
                                            .addComponent(fondoBuscarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(bgLayout.createSequentialGroup()
                                            .addGap(82, 82, 82)
                                            .addComponent(fondoMofificarReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(43, 43, 43)
                                            .addComponent(fondoBorraReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(bgLayout.createSequentialGroup()
                                            .addComponent(txtIdPacientesModi, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(14, 14, 14)
                                            .addComponent(comboBoxIdDoctorRe, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(bgLayout.createSequentialGroup()
                                            .addComponent(txtDescripcion)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(boxDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(bgLayout.createSequentialGroup()
                                            .addComponent(txtIDCita, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(24, 24, 24)
                                            .addComponent(boxIdCita, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(tituloCrearCita1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(bgLayout.createSequentialGroup()
                                            .addComponent(fondoCrear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(33, 33, 33)
                                            .addComponent(fondoLimpiarCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(31, 31, 31)
                                            .addComponent(fondoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(tituloCrearCita)
                        .addGap(20, 20, 20)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(txtId_Pacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addComponent(txtId_Doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtFecha))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(boxIDPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboBoxIdDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboBoxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboBoxMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fondoCrear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fondoLimpiarCita, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(fondoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fondoBorraCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fondoMofificarCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(tituloCrearCita1)))
                .addGap(23, 23, 23)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIDCita)
                            .addComponent(boxIdCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdPacientesModi)
                            .addComponent(comboBoxIdDoctorRe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(fondoLimpiarReceta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fondoBuscarReceta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fondoCrearReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fondoMofificarReceta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fondoBorraReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(46, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearMouseEntered
        fondoCrear.setBackground(new Color(46, 50, 57));
    }//GEN-LAST:event_btnCrearMouseEntered

    private void btnCrearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearMouseExited
        fondoCrear.setBackground(new Color(95, 122, 219));
    }//GEN-LAST:event_btnCrearMouseExited

    private void btnCrearRecetaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearRecetaMouseEntered
        fondoCrearReceta.setBackground(new Color(46, 50, 57));
    }//GEN-LAST:event_btnCrearRecetaMouseEntered

    private void btnCrearRecetaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearRecetaMouseExited
        fondoCrearReceta.setBackground(new Color(95, 122, 219));
    }//GEN-LAST:event_btnCrearRecetaMouseExited

    private void btnBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseEntered
        fondoBuscar.setBackground(new Color(46, 50, 57));
    }//GEN-LAST:event_btnBuscarMouseEntered

    private void btnBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseExited
        fondoBuscar.setBackground(new Color(95, 122, 219));
    }//GEN-LAST:event_btnBuscarMouseExited

    private void btnLimpiarRecetaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarRecetaMouseEntered
        fondoLimpiarReceta.setBackground(new Color(46, 50, 57));
    }//GEN-LAST:event_btnLimpiarRecetaMouseEntered

    private void btnLimpiarRecetaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarRecetaMouseExited
        fondoLimpiarReceta.setBackground(new Color(95, 122, 219));
    }//GEN-LAST:event_btnLimpiarRecetaMouseExited

    private void btnCrearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearMouseClicked
        try {
            Conexion con = new Conexion();
            String idPaciente = boxIDPaciente.getText();
            String idDoctor = comboBoxIdDoctor.getSelectedItem().toString();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String fecha = sdf.format(dateChooser.getDate());
            String hora = comboBoxHora.getSelectedItem().toString();
            String min = comboBoxMin.getSelectedItem().toString();
            String horaCita = hora + ":" + min;

            String query = "INSERT INTO Citas (id_paciente, id_doctor, fecha, hora) VALUES (?, ?, ?, ?)";

            PreparedStatement preparedStatement = con.prepareStatement(query);
            preparedStatement.setString(1, idPaciente);
            preparedStatement.setString(2, idDoctor);
            preparedStatement.setString(3, fecha);
            preparedStatement.setString(4, horaCita);

            preparedStatement.executeUpdate();

            // Mostrar ventana emergente
            JOptionPane.showMessageDialog(this, "Cita agregada correctamente.");

            // Volver a cargar los datos en tableCita
            DefaultTableModel model = (DefaultTableModel) tableCita.getModel();
            model.setRowCount(0);

            query = "SELECT c.id_cita, c.id_paciente, p.nombres AS nombres_paciente, p.apellidos AS apellidos_paciente, c.id_doctor, d.nombres_doctor AS nombres_doctor, d.apellidos_doctor AS apellidos_doctor, c.fecha, c.hora FROM Citas c JOIN Pacientes p ON c.id_paciente = p.id_paciente JOIN Doctores d ON c.id_doctor = d.id_doctor";
            preparedStatement = con.prepareStatement(query);
            ResultSet rs = preparedStatement.executeQuery();

            while (rs.next()) {
                int id_cita = rs.getInt("id_cita");
                int id_paciente2 = rs.getInt("id_paciente");
                String nombres_paciente = rs.getString("nombres_paciente");
                String apellidos_paciente = rs.getString("apellidos_paciente");
                int id_doctor2 = rs.getInt("id_doctor");
                String nombres_doctor = rs.getString("nombres_doctor");
                String apellidos_doctor = rs.getString("apellidos_doctor");
                Date fecha2 = rs.getDate("fecha");
                Time hora2 = rs.getTime("hora");

                model.addRow(new Object[]{id_cita, id_paciente2, nombres_paciente, apellidos_paciente, id_doctor2, nombres_doctor, apellidos_doctor, fecha2, hora2});
            }

            boxIDPaciente.setText("");
            comboBoxIdDoctor.setSelectedIndex(0);
            dateChooser.setDate(null);
            comboBoxHora.setSelectedIndex(0);
            comboBoxMin.setSelectedIndex(0);
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnCrearMouseClicked

    private void btnLimpiarCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarCitaMouseClicked
        boxIDPaciente.setText("");
        comboBoxIdDoctor.setSelectedIndex(0);
        dateChooser.setDate(null);
        comboBoxHora.setSelectedIndex(0);
        comboBoxMin.setSelectedIndex(0);
    }//GEN-LAST:event_btnLimpiarCitaMouseClicked

    private void btnLimpiarCitaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarCitaMouseEntered
        fondoLimpiarCita.setBackground(new Color(46, 50, 57));
    }//GEN-LAST:event_btnLimpiarCitaMouseEntered

    private void btnLimpiarCitaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarCitaMouseExited
        fondoLimpiarCita.setBackground(new Color(95, 122, 219));
    }//GEN-LAST:event_btnLimpiarCitaMouseExited

    private void btnLimpiarRecetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarRecetaMouseClicked
        boxIdCita.setText("");
        comboBoxIdDoctorRe.setSelectedIndex(0);
        boxDescripcion.setText("");
    }//GEN-LAST:event_btnLimpiarRecetaMouseClicked

    private void btnBuscarRecetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarRecetaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarRecetaMouseClicked

    private void btnBuscarRecetaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarRecetaMouseEntered
        fondoBuscarReceta.setBackground(new Color(46, 50, 57));
    }//GEN-LAST:event_btnBuscarRecetaMouseEntered

    private void btnBuscarRecetaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarRecetaMouseExited
        fondoBuscarReceta.setBackground(new Color(95, 122, 219));
    }//GEN-LAST:event_btnBuscarRecetaMouseExited

    private void btnCrearRecetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearRecetaMouseClicked
        try {
            Conexion con = new Conexion();
            String idCita = boxIdCita.getText();
            String idDoctor = comboBoxIdDoctorRe.getSelectedItem().toString();
            String descripcion = boxDescripcion.getText();

            String query = "INSERT INTO Recetas (id_cita, id_doctor, fecha, hora, descripcion) VALUES (?, ?, CURRENT_DATE(), CURRENT_TIME(), ?)";

            PreparedStatement preparedStatement = con.prepareStatement(query);
            preparedStatement.setString(1, idCita);
            preparedStatement.setString(2, idDoctor);
            preparedStatement.setString(3, descripcion);

            preparedStatement.executeUpdate();
            boxIdCita.setText("");
            comboBoxIdDoctorRe.setSelectedIndex(0);
            boxDescripcion.setText("");
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnCrearRecetaMouseClicked

    private void btnModificarCitaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarCitaMouseEntered
        fondoMofificarCita.setBackground(new Color(46, 50, 57));
    }//GEN-LAST:event_btnModificarCitaMouseEntered

    private void btnModificarCitaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarCitaMouseExited
        fondoMofificarCita.setBackground(new Color(95, 122, 219));
    }//GEN-LAST:event_btnModificarCitaMouseExited

    private void btnBorrarCitaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarCitaMouseEntered
        fondoBorraCita.setBackground(new Color(46, 50, 57));
    }//GEN-LAST:event_btnBorrarCitaMouseEntered

    private void btnBorrarCitaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarCitaMouseExited
        fondoBorraCita.setBackground(new Color(95, 122, 219));
    }//GEN-LAST:event_btnBorrarCitaMouseExited

    private void btnBorrarRecetaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarRecetaMouseEntered
        fondoBorraReceta.setBackground(new Color(46, 50, 57));
    }//GEN-LAST:event_btnBorrarRecetaMouseEntered

    private void btnBorrarRecetaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarRecetaMouseExited
        fondoBorraReceta.setBackground(new Color(95, 122, 219));
    }//GEN-LAST:event_btnBorrarRecetaMouseExited

    private void btnModificarRecetaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarRecetaMouseEntered
        fondoMofificarReceta.setBackground(new Color(46, 50, 57));
    }//GEN-LAST:event_btnModificarRecetaMouseEntered

    private void btnModificarRecetaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarRecetaMouseExited
        fondoMofificarReceta.setBackground(new Color(95, 122, 219));
    }//GEN-LAST:event_btnModificarRecetaMouseExited

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        String input = JOptionPane.showInputDialog(this, "Ingrese ID_Paciente:");
        if (input != null && !input.isEmpty()) {
            try {
                Conexion con = new Conexion();
                DefaultTableModel model = (DefaultTableModel) tableCita.getModel();
                model.setRowCount(0);

                String query = "SELECT c.id_cita, c.id_paciente, p.nombres AS nombres_paciente, p.apellidos AS apellidos_paciente, c.id_doctor, d.nombres_doctor AS nombres_doctor, d.apellidos_doctor AS apellidos_doctor, c.fecha, c.hora FROM Citas c JOIN Pacientes p ON c.id_paciente = p.id_paciente JOIN Doctores d ON c.id_doctor = d.id_doctor WHERE c.id_paciente = ?";
                PreparedStatement preparedStatement = con.prepareStatement(query);
                preparedStatement.setString(1, input);
                ResultSet rs = preparedStatement.executeQuery();

                boolean found = false;
                while (rs.next()) {
                    found = true;
                    int id_cita = rs.getInt("id_cita");
                    int id_paciente2 = rs.getInt("id_paciente");
                    String nombres_paciente = rs.getString("nombres_paciente");
                    String apellidos_paciente = rs.getString("apellidos_paciente");
                    int id_doctor2 = rs.getInt("id_doctor");
                    String nombres_doctor = rs.getString("nombres_doctor");
                    String apellidos_doctor = rs.getString("apellidos_doctor");
                    Date fecha2 = rs.getDate("fecha");
                    Time hora2 = rs.getTime("hora");

                    model.addRow(new Object[]{id_cita, id_paciente2, nombres_paciente, apellidos_paciente, id_doctor2, nombres_doctor, apellidos_doctor, fecha2, hora2});
                }

                if (!found) {
                    // Mostrar un mensaje de error si no se encontró ningún registro
                    JOptionPane.showMessageDialog(this, "No se encontraron citas con el ID_Paciente especificado.");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un ID_Paciente.");
        }
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void tableCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCitaMouseClicked
        int selectedRow = tableCita.getSelectedRow();
        if (selectedRow != -1) {
            int id_paciente = (int) tableCita.getValueAt(selectedRow, 1);
            int id_doctor = (int) tableCita.getValueAt(selectedRow, 4);
            Date fecha = (Date) tableCita.getValueAt(selectedRow, 7);
            Time hora = (Time) tableCita.getValueAt(selectedRow, 8);

            // Actualizar los campos de texto y cuadros combinados en la interfaz de usuario con los valores seleccionados
            boxIDPaciente.setText(String.valueOf(id_paciente));
            comboBoxIdDoctor.setSelectedItem(String.valueOf(id_doctor));
            dateChooser.setDate(fecha);

            // Separar la cadena de hora en sus componentes de hora y minutos
            String[] horaCita = hora.toString().split(":");
            String hour = horaCita[0];
            String minute = horaCita[1];

            // Actualizar los cuadros combinados de hora y minutos
            comboBoxHora.setSelectedItem(hour);
            comboBoxMin.setSelectedItem(minute);
        }
    }//GEN-LAST:event_tableCitaMouseClicked

    private void btnModificarCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarCitaMouseClicked
        int selectedRow = tableCita.getSelectedRow();
        if (selectedRow != -1) {
            int id_cita = (int) tableCita.getValueAt(selectedRow, 0);
            int id_paciente = (int) tableCita.getValueAt(selectedRow, 1);
            String nombres_paciente = tableCita.getValueAt(selectedRow, 2).toString();
            String apellidos_paciente = tableCita.getValueAt(selectedRow, 3).toString();
            int id_doctor = (int) tableCita.getValueAt(selectedRow, 4);
            String nombres_doctor = tableCita.getValueAt(selectedRow, 5).toString();
            String apellidos_doctor = tableCita.getValueAt(selectedRow, 6).toString();
            Date fecha = (Date) tableCita.getValueAt(selectedRow, 7);
            Time hora = (Time) tableCita.getValueAt(selectedRow, 8);

            int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de actualizar la cita de " + nombres_paciente + " " + apellidos_paciente + " con el doctor " + nombres_doctor + " " + apellidos_doctor + "?", "Confirmar actualización", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    Conexion con = new Conexion();
                    int id_paciente2 = Integer.parseInt(boxIDPaciente.getText());
                    int id_doctor2 = Integer.parseInt(comboBoxIdDoctor.getSelectedItem().toString());
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    String fecha2 = sdf.format(dateChooser.getDate());
                    String hora2 = comboBoxHora.getSelectedItem().toString();
                    String min2 = comboBoxMin.getSelectedItem().toString();
                    String horaCita2 = hora2 + ":" + min2;

                    String query = "UPDATE Citas SET id_paciente=?, id_doctor=?, fecha=?, hora=? WHERE id_cita=?";

                    PreparedStatement preparedStatement = con.prepareStatement(query);
                    preparedStatement.setInt(1, id_paciente2);
                    preparedStatement.setInt(2, id_doctor2);
                    preparedStatement.setString(3, fecha2);
                    preparedStatement.setString(4, horaCita2);
                    preparedStatement.setInt(5, id_cita);

                    preparedStatement.executeUpdate();

                    // Limpiar los campos de texto y cuadros combinados en la interfaz de usuario
                    boxIDPaciente.setText("");
                    comboBoxIdDoctor.setSelectedIndex(0);
                    dateChooser.setDate(null);
                    comboBoxHora.setSelectedIndex(0);
                    comboBoxMin.setSelectedIndex(0);

                    // Volver a cargar los datos en la tabla
                    DefaultTableModel model = (DefaultTableModel) tableCita.getModel();
                    model.setRowCount(0);

                    query = "SELECT c.id_cita, c.id_paciente, p.nombres AS nombres_paciente, p.apellidos AS apellidos_paciente, c.id_doctor, d.nombres_doctor AS nombres_doctor, d.apellidos_doctor AS apellidos_doctor, c.fecha, c.hora FROM Citas c JOIN Pacientes p ON c.id_paciente = p.id_paciente JOIN Doctores d ON c.id_doctor = d.id_doctor";
                    preparedStatement = con.prepareStatement(query);
                    ResultSet rs = preparedStatement.executeQuery();

                    while (rs.next()) {
                        int id_cita2 = rs.getInt("id_cita");
                        int id_paciente3 = rs.getInt("id_paciente");
                        String nombres_paciente2 = rs.getString("nombres_paciente");
                        String apellidos_paciente2 = rs.getString("apellidos_paciente");
                        int id_doctor3 = rs.getInt("id_doctor");
                        String nombres_doctor2 = rs.getString("nombres_doctor");
                        String apellidos_doctor2 = rs.getString("apellidos_doctor");
                        Date fecha3 = rs.getDate("fecha");
                        Time hora3 = rs.getTime("hora");

                        model.addRow(new Object[]{id_cita2, id_paciente3, nombres_paciente2, apellidos_paciente2, id_doctor3, nombres_doctor2, apellidos_doctor2, fecha3, hora3});
                    }
                } catch (ClassNotFoundException | NumberFormatException | SQLException e) {
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor seleccione una fila en la tabla para actualizar.");
        }
    }//GEN-LAST:event_btnModificarCitaMouseClicked

    private void btnBorrarCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarCitaMouseClicked
        int selectedRow = tableCita.getSelectedRow();
        if (selectedRow != -1) {
            int id_cita = (int) tableCita.getValueAt(selectedRow, 0);
            String nombres_paciente = tableCita.getValueAt(selectedRow, 2).toString();
            String apellidos_paciente = tableCita.getValueAt(selectedRow, 3).toString();
            String nombres_doctor = tableCita.getValueAt(selectedRow, 5).toString();
            String apellidos_doctor = tableCita.getValueAt(selectedRow, 6).toString();

            int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar la cita de " + nombres_paciente + " " + apellidos_paciente + " con el doctor " + nombres_doctor + " " + apellidos_doctor + "?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    Conexion con = new Conexion();

                    String query = "DELETE FROM Citas WHERE id_cita=?";

                    PreparedStatement preparedStatement = con.prepareStatement(query);
                    preparedStatement.setInt(1, id_cita);

                    preparedStatement.executeUpdate();

                    // Limpiar los campos de texto y cuadros combinados en la interfaz de usuario
                    boxIDPaciente.setText("");
                    comboBoxIdDoctor.setSelectedIndex(0);
                    dateChooser.setDate(null);
                    comboBoxHora.setSelectedIndex(0);
                    comboBoxMin.setSelectedIndex(0);

                    // Volver a cargar los datos en la tabla
                    DefaultTableModel model = (DefaultTableModel) tableCita.getModel();
                    model.setRowCount(0);

                    query = "SELECT c.id_cita, c.id_paciente, p.nombres AS nombres_paciente, p.apellidos AS apellidos_paciente, c.id_doctor, d.nombres_doctor AS nombres_doctor, d.apellidos_doctor AS apellidos_doctor, c.fecha, c.hora FROM Citas c JOIN Pacientes p ON c.id_paciente = p.id_paciente JOIN Doctores d ON c.id_doctor = d.id_doctor";
                    preparedStatement = con.prepareStatement(query);
                    ResultSet rs = preparedStatement.executeQuery();

                    while (rs.next()) {
                        int id_cita2 = rs.getInt("id_cita");
                        int id_paciente2 = rs.getInt("id_paciente");
                        String nombres_paciente2 = rs.getString("nombres_paciente");
                        String apellidos_paciente2 = rs.getString("apellidos_paciente");
                        int id_doctor2 = rs.getInt("id_doctor");
                        String nombres_doctor2 = rs.getString("nombres_doctor");
                        String apellidos_doctor2 = rs.getString("apellidos_doctor");
                        Date fecha2 = rs.getDate("fecha");
                        Time hora2 = rs.getTime("hora");

                        model.addRow(new Object[]{id_cita2, id_paciente2, nombres_paciente2, apellidos_paciente2, id_doctor2, nombres_doctor2, apellidos_doctor2, fecha2, hora2});
                    }
                } catch (ClassNotFoundException | SQLException e) {
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor seleccione una fila en la tabla para eliminar.");
        }
    }//GEN-LAST:event_btnBorrarCitaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JTextField boxDescripcion;
    private javax.swing.JTextField boxIDPaciente;
    private javax.swing.JTextField boxIdCita;
    private javax.swing.JLabel btnBorrarCita;
    private javax.swing.JLabel btnBorrarReceta;
    private javax.swing.JLabel btnBuscar;
    private javax.swing.JLabel btnBuscarReceta;
    private javax.swing.JLabel btnCrear;
    private javax.swing.JLabel btnCrearReceta;
    private javax.swing.JLabel btnLimpiarCita;
    private javax.swing.JLabel btnLimpiarReceta;
    private javax.swing.JLabel btnModificarCita;
    private javax.swing.JLabel btnModificarCita1;
    private javax.swing.JLabel btnModificarReceta;
    private javax.swing.JComboBox<String> comboBoxHora;
    private javax.swing.JComboBox<String> comboBoxIdDoctor;
    private javax.swing.JComboBox<String> comboBoxIdDoctorRe;
    private javax.swing.JComboBox<String> comboBoxMin;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JPanel fondoBorraCita;
    private javax.swing.JPanel fondoBorraReceta;
    private javax.swing.JPanel fondoBuscar;
    private javax.swing.JPanel fondoBuscarReceta;
    private javax.swing.JPanel fondoCrear;
    private javax.swing.JPanel fondoCrearReceta;
    private javax.swing.JPanel fondoLimpiarCita;
    private javax.swing.JPanel fondoLimpiarReceta;
    private javax.swing.JPanel fondoMofificarCita;
    private javax.swing.JPanel fondoMofificarCita1;
    private javax.swing.JPanel fondoMofificarReceta;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableCita;
    private javax.swing.JTable tableRecetas;
    private javax.swing.JLabel tituloCrearCita;
    private javax.swing.JLabel tituloCrearCita1;
    private javax.swing.JLabel txtDescripcion;
    private javax.swing.JLabel txtFecha;
    private javax.swing.JLabel txtHora;
    private javax.swing.JLabel txtIDCita;
    private javax.swing.JLabel txtIdPacientesModi;
    private javax.swing.JLabel txtId_Doctor;
    private javax.swing.JLabel txtId_Pacientes;
    // End of variables declaration//GEN-END:variables
}
